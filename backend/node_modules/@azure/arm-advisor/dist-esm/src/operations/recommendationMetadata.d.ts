import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { RecommendationMetadata } from "../operationsInterfaces";
import { AdvisorManagementClient } from "../advisorManagementClient";
import { MetadataEntity, RecommendationMetadataListOptionalParams, RecommendationMetadataGetOptionalParams, RecommendationMetadataGetResponse } from "../models";
/** Class containing RecommendationMetadata operations. */
export declare class RecommendationMetadataImpl implements RecommendationMetadata {
    private readonly client;
    /**
     * Initialize a new instance of the class RecommendationMetadata class.
     * @param client Reference to the service client
     */
    constructor(client: AdvisorManagementClient);
    /**
     * Gets the list of metadata entities.
     * @param options The options parameters.
     */
    list(options?: RecommendationMetadataListOptionalParams): PagedAsyncIterableIterator<MetadataEntity>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Gets the metadata entity.
     * @param name Name of metadata entity.
     * @param options The options parameters.
     */
    get(name: string, options?: RecommendationMetadataGetOptionalParams): Promise<RecommendationMetadataGetResponse>;
    /**
     * Gets the list of metadata entities.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=recommendationMetadata.d.ts.map